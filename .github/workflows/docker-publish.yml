name: Docker

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  #schedule:
  #  - cron: '22 13 * * *'
  push:
    branches: [ main, problema-com-dependencias ]
    # Publish semver tags as releases.
    tags: [ 'v*.*.*' ]
  #pull_request:
  #  branches: [ main ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}


jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      # Installs dependencies from requirements.txt
      - name: Install dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
          build-essential \
          libxml2-dev \
          libxslt1-dev \
          zlib1g-dev \
          python3-dev \
          gcc \
          && apt-get clean \
          && rm -rf /var/lib/apt/lists/*
          pip install --upgrade pip setuptools wheel
          pip3 install --no-cache-dir -r requirements.txt

      # # Running all tests
      # - name: Running tests
      #   run: python3 -m unittest discover -s ./src -p 'test_*.py'

      # # Login against a Docker registry except on PR
      # # https://github.com/docker/login-action
      # - name: Log into registry ${{ env.REGISTRY }}
      #   if: github.event_name != 'pull_request'
      #   uses: docker/login-action@v1
      #   with:
      #     registry: ${{ env.REGISTRY }}
      #     username: ${{ github.actor }}
      #     password: ${{ secrets.GITHUB_TOKEN }}

      # # Extract metadata (tags, labels) for Docker
      # # https://github.com/docker/metadata-action
      # - name: Extract Docker metadata
      #   id: meta
      #   uses: docker/metadata-action@v3
      #   with:
      #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      # # Build and push Docker image with Buildx (don't push on PR)
      # # https://github.com/docker/build-push-action
      # - name: Build and push Docker image
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}